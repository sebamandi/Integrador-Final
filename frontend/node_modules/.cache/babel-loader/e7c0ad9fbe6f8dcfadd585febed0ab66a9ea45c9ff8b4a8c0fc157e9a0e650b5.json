{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNotification } from '../context/NotificationContext';\nexport const useFormValidation = (initialValues, validationRules) => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    showNotification\n  } = useNotification();\n  const validateField = (name, value) => {\n    const fieldRules = validationRules[name];\n    if (!fieldRules) return '';\n    for (const rule of fieldRules) {\n      const error = rule(value, values);\n      if (error) return error;\n    }\n    return '';\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setValues(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n    if (touched[name]) {\n      const error = validateField(name, newValue);\n      setErrors(prev => ({\n        ...prev,\n        [name]: error\n      }));\n    }\n  };\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTouched(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    const error = validateField(name, value);\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n    Object.keys(values).forEach(name => {\n      const error = validateField(name, values[name]);\n      if (error) {\n        newErrors[name] = error;\n        isValid = false;\n      }\n    });\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = async onSubmit => {\n    setIsSubmitting(true);\n    setTouched(Object.keys(values).reduce((acc, key) => ({\n      ...acc,\n      [key]: true\n    }), {}));\n    if (validateForm()) {\n      try {\n        await onSubmit(values);\n        showNotification('Operación realizada con éxito', 'success');\n        setValues(initialValues);\n        setTouched({});\n      } catch (error) {\n        showNotification(error.message || 'Error al procesar la solicitud', 'error');\n      }\n    } else {\n      showNotification('Por favor, corrija los errores del formulario', 'error');\n    }\n    setIsSubmitting(false);\n  };\n  return {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setValues\n  };\n};\n_s(useFormValidation, \"N9+lCjv+7vdSLFS5KXPgSr/BpL4=\", false, function () {\n  return [useNotification];\n});\nexport default useFormValidation;","map":{"version":3,"names":["useState","useNotification","useFormValidation","initialValues","validationRules","_s","values","setValues","errors","setErrors","touched","setTouched","isSubmitting","setIsSubmitting","showNotification","validateField","name","value","fieldRules","rule","error","handleChange","e","type","checked","target","newValue","prev","handleBlur","validateForm","newErrors","isValid","Object","keys","forEach","handleSubmit","onSubmit","reduce","acc","key","message"],"sources":["C:/Users/Smand/OneDrive/Documentos/Visual Studio/Integrador-Final/frontend/src/hooks/useFormValidation.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNotification } from '../context/NotificationContext';\r\n\r\nexport const useFormValidation = (initialValues, validationRules) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { showNotification } = useNotification();\r\n\r\n  const validateField = (name, value) => {\r\n    const fieldRules = validationRules[name];\r\n    if (!fieldRules) return '';\r\n\r\n    for (const rule of fieldRules) {\r\n      const error = rule(value, values);\r\n      if (error) return error;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const newValue = type === 'checkbox' ? checked : value;\r\n    \r\n    setValues(prev => ({\r\n      ...prev,\r\n      [name]: newValue\r\n    }));\r\n\r\n    if (touched[name]) {\r\n      const error = validateField(name, newValue);\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: error\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target;\r\n    setTouched(prev => ({\r\n      ...prev,\r\n      [name]: true\r\n    }));\r\n    \r\n    const error = validateField(name, value);\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [name]: error\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    Object.keys(values).forEach(name => {\r\n      const error = validateField(name, values[name]);\r\n      if (error) {\r\n        newErrors[name] = error;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (onSubmit) => {\r\n    setIsSubmitting(true);\r\n    setTouched(Object.keys(values).reduce((acc, key) => ({ ...acc, [key]: true }), {}));\r\n\r\n    if (validateForm()) {\r\n      try {\r\n        await onSubmit(values);\r\n        showNotification('Operación realizada con éxito', 'success');\r\n        setValues(initialValues);\r\n        setTouched({});\r\n      } catch (error) {\r\n        showNotification(error.message || 'Error al procesar la solicitud', 'error');\r\n      }\r\n    } else {\r\n      showNotification('Por favor, corrija los errores del formulario', 'error');\r\n    }\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    touched,\r\n    isSubmitting,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    setValues\r\n  };\r\n};\r\n\r\nexport default useFormValidation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
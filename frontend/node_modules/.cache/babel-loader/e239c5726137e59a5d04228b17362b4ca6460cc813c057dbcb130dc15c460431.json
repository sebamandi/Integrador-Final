{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smand\\\\OneDrive\\\\Documentos\\\\Visual Studio\\\\Integrador-Final\\\\frontend\\\\src\\\\context\\\\ProductContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { productService } from '../services/api';\nimport { useNotification } from './NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport const ProductProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    showNotification\n  } = useNotification();\n  const loadProducts = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await productService.getAll();\n      setProducts(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Error al cargar los productos');\n      showNotification('Error al cargar los productos', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, [showNotification]);\n  useEffect(() => {\n    loadProducts();\n  }, [loadProducts]);\n  const addProduct = async productData => {\n    try {\n      setLoading(true);\n      const response = await productService.create(productData);\n      setProducts(prev => [...prev, response.data]);\n      showNotification('Producto creado exitosamente', 'success');\n      return response.data;\n    } catch (err) {\n      showNotification('Error al crear el producto', 'error');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProduct = async (id, productData) => {\n    try {\n      setLoading(true);\n      const response = await productService.update(id, productData);\n      setProducts(prev => prev.map(product => product.id === id ? response.data : product));\n      showNotification('Producto actualizado exitosamente', 'success');\n      return response.data;\n    } catch (err) {\n      showNotification('Error al actualizar el producto', 'error');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteProduct = async id => {\n    try {\n      await productService.delete(id);\n      setProducts(prev => prev.filter(product => product.id !== id));\n      showNotification('Producto eliminado exitosamente', 'success');\n    } catch (err) {\n      showNotification('Error al eliminar el producto', 'error');\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      loading,\n      error,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      refreshProducts: loadProducts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductProvider, \"oUFQrn6ajHQsnUTGD/ePN7jhdR0=\", false, function () {\n  return [useNotification];\n});\n_c = ProductProvider;\nexport const useProducts = () => {\n  _s2();\n  const context = useContext(ProductContext);\n  if (!context) {\n    throw new Error('useProducts must be used within a ProductProvider');\n  }\n  return context;\n};\n_s2(useProducts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","productService","useNotification","jsxDEV","_jsxDEV","ProductContext","ProductProvider","children","_s","products","setProducts","loading","setLoading","error","setError","showNotification","loadProducts","response","getAll","data","err","addProduct","productData","create","prev","updateProduct","id","update","map","product","deleteProduct","delete","filter","Provider","value","refreshProducts","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProducts","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Smand/OneDrive/Documentos/Visual Studio/Integrador-Final/frontend/src/context/ProductContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { productService } from '../services/api';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nconst ProductContext = createContext();\r\n\r\nexport const ProductProvider = ({ children }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { showNotification } = useNotification();\r\n\r\n  const loadProducts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await productService.getAll();\r\n      setProducts(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Error al cargar los productos');\r\n      showNotification('Error al cargar los productos', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showNotification]);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n  }, [loadProducts]);\r\n\r\n  const addProduct = async (productData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await productService.create(productData);\r\n      setProducts(prev => [...prev, response.data]);\r\n      showNotification('Producto creado exitosamente', 'success');\r\n      return response.data;\r\n    } catch (err) {\r\n      showNotification('Error al crear el producto', 'error');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProduct = async (id, productData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await productService.update(id, productData);\r\n      setProducts(prev =>\r\n        prev.map(product =>\r\n          product.id === id ? response.data : product\r\n        )\r\n      );\r\n      showNotification('Producto actualizado exitosamente', 'success');\r\n      return response.data;\r\n    } catch (err) {\r\n      showNotification('Error al actualizar el producto', 'error');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await productService.delete(id);\r\n      setProducts(prev => prev.filter(product => product.id !== id));\r\n      showNotification('Producto eliminado exitosamente', 'success');\r\n    } catch (err) {\r\n      showNotification('Error al eliminar el producto', 'error');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ProductContext.Provider value={{\r\n      products,\r\n      loading,\r\n      error,\r\n      addProduct,\r\n      updateProduct,\r\n      deleteProduct,\r\n      refreshProducts: loadProducts\r\n    }}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProducts = () => {\r\n  const context = useContext(ProductContext);\r\n  if (!context) {\r\n    throw new Error('useProducts must be used within a ProductProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
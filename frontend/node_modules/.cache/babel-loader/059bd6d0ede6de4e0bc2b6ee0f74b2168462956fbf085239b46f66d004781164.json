{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Interceptor para manejar errores\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error en la solicitud';\n  return Promise.reject(new Error(message));\n});\nexport const productService = {\n  getAll: () => api.get('/products'),\n  getById: id => api.get(`/products/${id}`),\n  create: data => api.post('/products', data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  update: (id, data) => api.put(`/products/${id}`, data),\n  delete: id => api.delete(`/products/${id}`)\n};\nexport const cartService = {\n  addToCart: data => api.post('/cart', data),\n  updateCartItem: data => api.put('/cart/item', data),\n  removeFromCart: productId => api.delete(`/cart/item/${productId}`),\n  clearCart: () => api.delete('/cart'),\n  // Método para crear preferencia de pago\n  createCheckout: items => api.post('/payment/create-preference', {\n    items\n  })\n};\nexport const contactService = {\n  send: data => api.post('/contact', data)\n};\nexport const authService = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.get('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me')\n};\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","withCredentials","interceptors","response","use","error","_error$response","_error$response$data","message","data","Promise","reject","Error","productService","getAll","get","getById","id","post","update","put","delete","cartService","addToCart","updateCartItem","removeFromCart","productId","clearCart","createCheckout","items","contactService","send","authService","login","email","password","register","userData","logout","getCurrentUser"],"sources":["C:/Users/Smand/OneDrive/Documentos/Visual Studio/Integrador-Final/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  withCredentials: true\r\n});\r\n\r\n// Interceptor para manejar errores\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    const message = error.response?.data?.message || 'Error en la solicitud';\r\n    return Promise.reject(new Error(message));\r\n  }\r\n);\r\n\r\nexport const productService = {\r\n  getAll: () => api.get('/products'),\r\n  getById: (id) => api.get(`/products/${id}`),\r\n  create: (data) => api.post('/products', data, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }),\r\n  update: (id, data) => api.put(`/products/${id}`, data),\r\n  delete: (id) => api.delete(`/products/${id}`),\r\n};\r\n\r\nexport const cartService = {\r\n  addToCart: (data) => api.post('/cart', data),\r\n  updateCartItem: (data) => api.put('/cart/item', data),\r\n  removeFromCart: (productId) => api.delete(`/cart/item/${productId}`),\r\n  clearCart: () => api.delete('/cart'),\r\n  \r\n  // Método para crear preferencia de pago\r\n  createCheckout: (items) => api.post('/payment/create-preference', { items }),\r\n};\r\n\r\nexport const contactService = {\r\n  send: (data) => api.post('/contact', data),\r\n};\r\n\r\nexport const authService = {\r\n  login: (email, password) => api.post('/auth/login', { email, password }),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  logout: () => api.get('/auth/logout'),\r\n  getCurrentUser: () => api.get('/auth/me')\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,QAAQ;EACjBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACP,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,uBAAuB;EACxE,OAAOE,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACJ,OAAO,CAAC,CAAC;AAC3C,CACF,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG;EAC5BC,MAAM,EAAEA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3CnB,MAAM,EAAGW,IAAI,IAAKZ,GAAG,CAACqB,IAAI,CAAC,WAAW,EAAET,IAAI,EAAE;IAC5CT,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACFmB,MAAM,EAAEA,CAACF,EAAE,EAAER,IAAI,KAAKZ,GAAG,CAACuB,GAAG,CAAC,aAAaH,EAAE,EAAE,EAAER,IAAI,CAAC;EACtDY,MAAM,EAAGJ,EAAE,IAAKpB,GAAG,CAACwB,MAAM,CAAC,aAAaJ,EAAE,EAAE;AAC9C,CAAC;AAED,OAAO,MAAMK,WAAW,GAAG;EACzBC,SAAS,EAAGd,IAAI,IAAKZ,GAAG,CAACqB,IAAI,CAAC,OAAO,EAAET,IAAI,CAAC;EAC5Ce,cAAc,EAAGf,IAAI,IAAKZ,GAAG,CAACuB,GAAG,CAAC,YAAY,EAAEX,IAAI,CAAC;EACrDgB,cAAc,EAAGC,SAAS,IAAK7B,GAAG,CAACwB,MAAM,CAAC,cAAcK,SAAS,EAAE,CAAC;EACpEC,SAAS,EAAEA,CAAA,KAAM9B,GAAG,CAACwB,MAAM,CAAC,OAAO,CAAC;EAEpC;EACAO,cAAc,EAAGC,KAAK,IAAKhC,GAAG,CAACqB,IAAI,CAAC,4BAA4B,EAAE;IAAEW;EAAM,CAAC;AAC7E,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG;EAC5BC,IAAI,EAAGtB,IAAI,IAAKZ,GAAG,CAACqB,IAAI,CAAC,UAAU,EAAET,IAAI;AAC3C,CAAC;AAED,OAAO,MAAMuB,WAAW,GAAG;EACzBC,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKtC,GAAG,CAACqB,IAAI,CAAC,aAAa,EAAE;IAAEgB,KAAK;IAAEC;EAAS,CAAC,CAAC;EACxEC,QAAQ,EAAGC,QAAQ,IAAKxC,GAAG,CAACqB,IAAI,CAAC,gBAAgB,EAAEmB,QAAQ,CAAC;EAC5DC,MAAM,EAAEA,CAAA,KAAMzC,GAAG,CAACkB,GAAG,CAAC,cAAc,CAAC;EACrCwB,cAAc,EAAEA,CAAA,KAAM1C,GAAG,CAACkB,GAAG,CAAC,UAAU;AAC1C,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smand\\\\OneDrive\\\\Documentos\\\\Visual Studio\\\\Integrador-Final\\\\frontend\\\\src\\\\context\\\\NotificationContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { AlertCircle, CheckCircle, Info, X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const showNotification = useCallback((message, type = 'success', duration = 3000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      message,\n      type\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(notif => notif.id !== id));\n    }, duration);\n  }, []);\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  }, []);\n  const getIcon = type => {\n    switch (type) {\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"text-green-500\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"text-red-500\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      case 'info':\n        return /*#__PURE__*/_jsxDEV(Info, {\n          className: \"text-blue-500\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      showNotification\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 right-4 z-50 space-y-2\",\n      children: notifications.map(({\n        id,\n        message,\n        type\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n              flex items-center p-4 rounded-lg shadow-lg\n              ${type === 'success' ? 'bg-green-50 border-l-4 border-green-500' : type === 'error' ? 'bg-red-50 border-l-4 border-red-500' : 'bg-blue-50 border-l-4 border-blue-500'}\n              transform transition-all duration-300 ease-in-out\n            `,\n        children: [getIcon(type), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mx-3 text-gray-800\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeNotification(id),\n          className: \"text-gray-400 hover:text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"P9Z1JK3tONycM7iU3Vee8rYzKMQ=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","AlertCircle","CheckCircle","Info","X","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","_s","notifications","setNotifications","showNotification","message","type","duration","id","Date","now","prev","setTimeout","filter","notif","removeNotification","getIcon","className","size","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","map","onClick","_c","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Smand/OneDrive/Documentos/Visual Studio/Integrador-Final/frontend/src/context/NotificationContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport { AlertCircle, CheckCircle, Info, X } from 'lucide-react';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const showNotification = useCallback((message, type = 'success', duration = 3000) => {\r\n    const id = Date.now();\r\n    \r\n    setNotifications(prev => [...prev, { id, message, type }]);\r\n\r\n    setTimeout(() => {\r\n      setNotifications(prev => prev.filter(notif => notif.id !== id));\r\n    }, duration);\r\n  }, []);\r\n\r\n  const removeNotification = useCallback((id) => {\r\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\r\n  }, []);\r\n\r\n  const getIcon = (type) => {\r\n    switch (type) {\r\n      case 'success':\r\n        return <CheckCircle className=\"text-green-500\" size={20} />;\r\n      case 'error':\r\n        return <AlertCircle className=\"text-red-500\" size={20} />;\r\n      case 'info':\r\n        return <Info className=\"text-blue-500\" size={20} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ showNotification }}>\r\n      {children}\r\n      <div className=\"fixed bottom-4 right-4 z-50 space-y-2\">\r\n        {notifications.map(({ id, message, type }) => (\r\n          <div\r\n            key={id}\r\n            className={`\r\n              flex items-center p-4 rounded-lg shadow-lg\r\n              ${type === 'success' ? 'bg-green-50 border-l-4 border-green-500' :\r\n                type === 'error' ? 'bg-red-50 border-l-4 border-red-500' :\r\n                'bg-blue-50 border-l-4 border-blue-500'}\r\n              transform transition-all duration-300 ease-in-out\r\n            `}\r\n          >\r\n            {getIcon(type)}\r\n            <p className=\"mx-3 text-gray-800\">{message}</p>\r\n            <button\r\n              onClick={() => removeNotification(id)}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <X size={16} />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}